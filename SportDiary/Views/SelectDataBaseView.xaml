<Page
    x:Class="SportDiary.Views.SelectDataBaseView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="using:SportDiary.Converters"
    xmlns:ViewModel="using:SportDiary.ViewModels"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:storage="using:Windows.Storage"
    mc:Ignorable="d"
    NavigationCacheMode="Disabled">

    <Page.DataContext>
        <ViewModel:SelectDataBaseViewModel/>
    </Page.DataContext>

    <Page.Resources>
        <converters:SelectIndexToBool x:Key="SelectIndexToBool"/>
    </Page.Resources>

    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton x:Uid="AddDBButton" Icon="Add" Command="{Binding AddDataBaseClick}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"/>
            <AppBarButton x:Uid="RefreshButton" Icon="Refresh" Command="{Binding RefreshClick}"/>
            <CommandBar.SecondaryCommands>
                <AppBarButton x:Uid="ImportButton" Icon="Import" Command="{Binding ImportDataBaseFileClick}"/>
                <AppBarButton x:Uid="ExportAllButton" Icon="SaveLocal" Command="{Binding ExportAllDataBasesFilesClick}"/>
                <!--<AppBarButton x:Uid="SettingsButton" Icon="Setting" Command="{Binding SettingsClick}"/>-->
                <!--<AppBarButton Label="Collect" Icon="Clear" Click="AppBarButton_Click"/>-->
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <ListView Name="DataBasesList" ItemsSource="{x:Bind ViewModel.DataBasesItems}"
            ItemContainerStyle="{StaticResource ListViewItemStyle}" BorderBrush="#FF4D4D4D" IsItemClickEnabled="True" SelectionMode="None">
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="ItemClick">
                    <Core:InvokeCommandAction Command="{Binding DataBaseItemClick}"/>
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>

            <ListView.ItemTemplate>
                <DataTemplate x:DataType="storage:StorageFile">
                    <Border BorderBrush="#FF4D4D4D" BorderThickness="0,0,0,1" Background="Transparent">
                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock Text="{Binding DisplayName}"></TextBlock>
                        </StackPanel>

                        <Border.ContextFlyout>
                            <MenuFlyout>
                                <MenuFlyout.Items>
                                    <!--<MenuFlyoutItem x:Uid="OpenInNewWindowButton" Icon="NewWindow" Command="{Binding Path=DataContext.OpenInNewWindowClick, ElementName=DataBasesList}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"/>-->
                                    <MenuFlyoutItem x:Uid="RenameButton" Icon="Rename" Command="{Binding Path=DataContext.RenameDataBaseClick, ElementName=DataBasesList}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"/>
                                    <MenuFlyoutItem x:Uid="ExportButton" Icon="SaveLocal" Command="{Binding Path=DataContext.ExportDataBaseClick, ElementName=DataBasesList}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"></MenuFlyoutItem>
                                    <MenuFlyoutItem x:Uid="DeleteButton" Icon="Delete" Command="{Binding Path=DataContext.DeleteDataBaseClick, ElementName=DataBasesList}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"/>
                                </MenuFlyout.Items>
                            </MenuFlyout>
                        </Border.ContextFlyout>
                    </Border>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <TextBlock x:Uid="EmptyText" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding EmtyTextVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBlock>
        <Grid Grid.RowSpan="2" Background="Transparent" Name="GridWaitMode" Visibility="{Binding ElementName=progressRing, Path=IsActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <Rectangle Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}" Opacity="0.5"/>
            <ProgressRing Name="progressRing" Width="50" Height="50" MinWidth="100" MinHeight="10" IsActive="{Binding WaitMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
    </Grid>

    <Interactivity:Interaction.Behaviors>
        <Core:EventTriggerBehavior EventName="Loaded">
            <Core:InvokeCommandAction Command="{Binding OnLoaded}"/>
        </Core:EventTriggerBehavior>
    </Interactivity:Interaction.Behaviors>
</Page>
