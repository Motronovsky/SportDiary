<Page
    x:Class="SportDiary.Views.MainPageView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SportDiary"
    xmlns:converters="using:SportDiary.Converters"
    xmlns:vm="using:SportDiary.ViewModels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Data="using:SportDiary.Models"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Media="using:Microsoft.Xaml.Interactions.Media"
    Name="MainPage"
    NavigationCacheMode="Disabled"
    mc:Ignorable="d" Loaded="Page_Loaded" PointerPressed="Page_PointerPressed">
    
    <Page.Resources>
        <Storyboard x:Name="VisibleOn">
            <DoubleAnimation Duration="0:0:20" From="0.0" To="1.0"
    			Storyboard.TargetProperty="Opacity"
    			Storyboard.TargetName="EmptyExercisesListText" />
        </Storyboard>
    </Page.Resources>
    
    <Page.DataContext>
        <vm:MainPageViewModel/>
    </Page.DataContext>

    <Page.BottomAppBar>
        <CommandBar ClosedDisplayMode="Compact" Opening="CommandBar_Opening">
            <CommandBar.PrimaryCommands>
                <AppBarButton x:Uid="AddDateButton" Icon="Calendar" Command="{Binding AddDateClick}">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="Number1" Modifiers="Shift"/>
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarButton x:Uid="AddExerciseButton" Icon="Add" Command="{Binding AddExerciseClick}" CommandParameter="{x:Bind DatesList}">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="Number2" Modifiers="Shift"/>
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarButton x:Uid="RefreshButton" Icon="Refresh" Command="{Binding RefreshClick}">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="Number3" Modifiers="Shift"/>
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
            </CommandBar.PrimaryCommands>

            <CommandBar.SecondaryCommands>
                <AppBarButton x:Uid="CopyAppBarButton" Icon="Copy" Command="{Binding CopyExercisesClick}" CommandParameter="{x:Bind ExercisesList}"/>
                <AppBarButton x:Uid="PasteAppBarButton" Icon="Paste" Command="{Binding PasteExercisesClick}" CommandParameter="{x:Bind DatesList}"/>
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <ListView Background="{ThemeResource SystemControlAcrylicElementBrush}"
                  MinWidth="120" 
                  BorderBrush="#FF4D4D4D"
                  BorderThickness="0,0,1,0"
                  ItemsSource="{x:Bind ViewModel.DatesCollection}"
                  x:Name="DatesList" 
                  ItemContainerStyle="{StaticResource ListViewItemStyle}"
                  SelectedIndex="{Binding DateSelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="Data:Date">
                    <Border Background="Transparent" BorderBrush="#FF4D4D4D" BorderThickness="0,0,0,1">
                        <StackPanel VerticalAlignment="Center">
                            <TextBlock Text="{Binding When, Converter={StaticResource StringFormatConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </StackPanel>
                        <Border.ContextFlyout>
                            <MenuFlyout>
                                <MenuFlyout.Items>
                                    <MenuFlyoutItem Icon="Edit" x:Uid="EditButton" Command="{Binding Path=DataContext.EditDateClick, ElementName=DatesList}" CommandParameter="{x:Bind IdDate}"/>
                                    <MenuFlyoutItem Icon="Delete" x:Uid="DeleteButton" Command="{Binding Path=DataContext.RemoveDateClick, ElementName=DatesList}" CommandParameter="{x:Bind IdDate}"/>
                                </MenuFlyout.Items>
                            </MenuFlyout>
                        </Border.ContextFlyout>
                    </Border>
                </DataTemplate>
            </ListView.ItemTemplate>
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="SelectionChanged">
                    <Core:InvokeCommandAction Command="{Binding SwitchingDate}" CommandParameter="{Binding ElementName=DatesList, Path=SelectedItem}"/>
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </ListView>

        <ListView Grid.Column="1"
                  ItemsSource="{Binding ExercisesCollection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  ItemContainerStyle="{StaticResource ListViewItemStyle}"
                  SelectionMode="Extended"
                  x:Name="ExercisesList">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="Data:Exercise">
                    <Border Background="Transparent">
                        <StackPanel BorderBrush="#FF4D4D4D" BorderThickness="0,0,0,1">
                            <Grid HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Uid="ExerciseNameTextBlock" Style="{StaticResource HeaderText}"/>
                                <TextBlock Grid.Column="1" Text="{Binding Name}" TextWrapping="Wrap"/>
                            </Grid>
                            <Grid HorizontalAlignment="Center" Visibility="{Binding ElementName=RepetitionTextBlock, Path=Text.Length, Converter={StaticResource StringToVisible}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Uid="RepetitionsTextBlock" Style="{StaticResource HeaderText}"/>
                                <TextBlock Grid.Column="1" Text="{Binding Repetition}" TextWrapping="Wrap" x:Name="RepetitionTextBlock"/>
                            </Grid>
                            <Grid HorizontalAlignment="Center" Visibility="{Binding ElementName=ApproachesTextBlock, Path=Text.Length, Converter={StaticResource StringToVisible}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Uid="ApproachesTextBlock" Style="{StaticResource HeaderText}"/>
                                <TextBlock Grid.Column="1" Text="{Binding Approaches}" TextWrapping="Wrap" x:Name="ApproachesTextBlock"/>
                            </Grid>
                            <Grid HorizontalAlignment="Center" Visibility="{Binding ElementName=DescriptionTextBlock, Path=Text.Length, Converter={StaticResource StringToVisible}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Uid="DetailsTextBlock"  Style="{StaticResource HeaderText}"/>
                                <TextBlock Grid.Column="1" Text="{Binding Description}" TextWrapping="Wrap" x:Name="DescriptionTextBlock"/>
                            </Grid>
                        </StackPanel>
                        <Border.ContextFlyout>
                            <MenuFlyout>
                                <MenuFlyout.Items>
                                    <MenuFlyoutItem Icon="Edit" x:Uid="EditButton" Command="{Binding Path=DataContext.EditExerciseClick, ElementName=ExercisesList}" CommandParameter="{x:Bind IdExercise}"/>
                                    <!--<MenuFlyoutItem Name="CopyContextMenuButton" Icon="Copy" Text="Copy" x:Uid="CopyButton" Command="{Binding Path=DataContext.CopyExercisesClick, ElementName=ExercisesList}" CommandParameter="{Binding ElementName=ExercisesList}"/>-->
                                    <MenuFlyoutItem Icon="Delete" x:Uid="DeleteButton" Command="{Binding Path=DataContext.RemoveExerciseClick, ElementName=ExercisesList}" CommandParameter="{x:Bind IdExercise}"/>
                                </MenuFlyout.Items>
                            </MenuFlyout>
                        </Border.ContextFlyout>
                    </Border>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <Grid Grid.ColumnSpan="{Binding EmptyTextGridSpan, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="{Binding EmptyTextGridColumn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Visibility="{Binding EmptyTextVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <TextBlock x:Uid="EmptyText" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Grid>
    </Grid>

    <Interactivity:Interaction.Behaviors>
        <Core:EventTriggerBehavior EventName="Loaded">
            <Core:InvokeCommandAction Command="{Binding OnLoaded}"/>
        </Core:EventTriggerBehavior>
    </Interactivity:Interaction.Behaviors>
</Page>
